/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h> 
#include <dt-bindings/zmk/bt.h>
* #include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define SEARCH    LS(F12)
#define JOURNAL   F21

//Ctrl + Arrows
#define CUP     LS(LC(T))
#define CLEFT   LS(LC(TAB))
#define CDOWN   LC(W)
#define CRIGHT  LC(TAB)

&mmv {
    time-to-max-speed-ms = <300>;
};

/ {    
    behaviors { 
        cup: cup {
            compatible = "zmk,behavior-mod-morph";
            label = "cup";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp CUP>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        cdown: cdown {
            compatible = "zmk,behavior-mod-morph";
            label = "cdown";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp CDOWN>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        cleft: cleft {
            compatible = "zmk,behavior-mod-morph";
            label = "cleft";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp CLEFT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        cright: cright {
            compatible = "zmk,behavior-mod-morph";
            label = "cright";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp CRIGHT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        
        ctrljournal: ctrljournal {
            compatible = "zmk,behavior-mod-morph";
            label = "ctrljournal";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp JOURNAL>;
            mods = <(MOD_RSFT)>;
        };
        backquestion: backquestion {
            compatible = "zmk,behavior-mod-morph";
            label = "backquestion";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };  
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };       
        mk: mk {
            compatible = "zmk,behavior-hold-tap";
            label = "mk";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
         };
    };
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC         &kp N1     &kp N2     &kp N3     &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp TAB         &kp SQT    &kp COMMA  &kp DOT    &kp P     &kp Y                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp BACKSPACE   &kp A      &kp O      &kp E      &kp U &kp I                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT       &kp SEMI   &kp Q      &kp J      &kp K     &kp X  &kp C_MUTE  &none  &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                &kp LGUI   &kp LALT   &kp LCTRL  &hm RSHIFT SPACE &kp RET                     &kp SPACE &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;           

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        low {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
